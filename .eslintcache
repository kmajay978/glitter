[{"D:\\Ajay_kumar\\Glitter\\glitter\\src\\pages\\SearchHome.js":"1","D:\\Ajay_kumar\\Glitter\\glitter\\src\\pages\\ChatBox.js":"2"},{"size":13248,"mtime":1612260578204,"results":"3","hashOfConfig":"4"},{"size":41818,"mtime":1612266718124,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k9vfid",{"filePath":"8","messages":"9","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"D:\\Ajay_kumar\\Glitter\\glitter\\src\\pages\\SearchHome.js",["11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"],"D:\\Ajay_kumar\\Glitter\\glitter\\src\\pages\\ChatBox.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { useState, useEffect } from \"react\";\r\nimport  $ from 'jquery';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport axios from \"axios\";\r\nimport NavLinks from '../components/Nav';\r\nimport { GIFT_LIST_API , GIFT_PURCHASE_API ,LIKED_LIST, VISITOR_LIST_API ,FRIENDLIST_API, GET_USERPROFILE_API ,VIDEOCALL_API, ACCEPT_REQUEST_API} from '../components/Api';\r\nimport {SOCKET} from '../components/Config';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { css } from \"@emotion/core\";\r\nimport BarLoader from \"react-spinners/BarLoader\";\r\nimport Logo from '../components/Logo';\r\nimport {selectUser, userProfile, videoCall} from \"../features/userSlice\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport useToggle from '../components/CommonFunction';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 10px auto;\r\n  border-radius: 50px !important;\r\n  width: 95%;\r\n`;\r\n// app id: bd7c4ac2265f496dbaa84d9837960c78\r\n// app secret: 40082f25ff2a4b88ac1358f7e863cba6\r\n// channel: test\r\n// token: 006bd7c4ac2265f496dbaa84d9837960c78IAAq1GZbv3moec3u6pFg67UZMEm0pzTuHT21ki9gqV9EXQx+f9gAAAAAEAAH/YchlRMJYAEAAQCYEwlg\r\n\r\nlet messageList = [], receiver_id, userData;\r\n\r\nconst scrollToBottom = () => {\r\n    var div = document.getElementById('chat-body');\r\n    if (!!div)\r\n        div.scroll({ top: div.scrollHeight, behavior: 'smooth' });\r\n}\r\n\r\nconst ChatBox = (props) =>{\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    // window.setTimeout()\r\n    const[Likes, setLikes] = useState([]);\r\n    const[Visitors, setVisitors] = useState([]);\r\n    const[FriendList, setFriendlist] = useState([]);\r\n    const[isLoaded, setIsLoaded] = useState(false);\r\n    const[FriendUserId, setFriendId] = useState('');\r\n    const[AllData, setData] = useState('');\r\n    const[CompleteMessageList, setMessages] = useState([]);\r\n    const[UserMessage, setuserMessage] = useState('');\r\n    const[randomNumber, setRandomNumber] = useState('');\r\n    const [isOn, toggleIsOn] = useToggle();\r\n    const [GiftData , setGiftData] =useState([]);\r\n\r\n    let [loading, setLoading] = useState(false);\r\n    const[recording, setRecording] = useState(false);\r\n    const [dummyMediaRc, setDummyMediaRc] = useState(null)\r\n    const [chatTyping, setChatTyping] = useState(\"\")\r\n\r\n    const createNotificationCustom = (type) => {\r\n  \r\n        switch (type) {\r\n          case 'success':\r\n            NotificationManager.success('Send successfull', 'Gift');\r\n            break;\r\n          case 'error':\r\n            NotificationManager.error('Please recharge and try again', 'Insufficient Balance!', 5000, () => {\r\n            });\r\n            break; \r\n      };\r\n      };\r\n\r\n// console.log(UserMessage);\r\n    const[GetActivity, setActivity] = useState(0);\r\n\r\n    userData = useSelector(userProfile).user.profile; //using redux useSelector here\r\n\r\n\r\n    console.log(CompleteMessageList, \"nowwww\")\r\n    const sessionId = localStorage.getItem('session_id');\r\n\r\n    const bodyParameters = {\r\n        session_id: sessionId,\r\n    };\r\n\r\n    // Fetching details of user initial time\r\n    const getAllDetails = async () => {\r\n        const likes = await axios.post(LIKED_LIST,bodyParameters)\r\n        setLikes(likes.data.data);\r\n\r\n        // Destructing response and getting data part\r\n        const visitor = await axios.post(VISITOR_LIST_API,bodyParameters)\r\n        setVisitors(visitor.data.result);\r\n\r\n        const friend= await axios.post(FRIENDLIST_API,bodyParameters)\r\n        console.log(friend.data, \"friend\")\r\n        const data = friend.data.data;\r\n        setFriendlist(!!friend ? friend.data.data : []);\r\n    }\r\n\r\n// Onclick button, getting LIkes, Visitor and friends list\r\n\r\n    const getLikes = async () => {  //Likes here\r\n        setActivity(0);\r\n        const { data: {data} } = await axios.post(LIKED_LIST,bodyParameters)\r\n        setLikes(data);\r\n    }\r\n\r\n    const getVisitors = async () => {  // Visitors here\r\n        setActivity(1);\r\n        const { data: {result} } = await axios.post(VISITOR_LIST_API,bodyParameters)\r\n        setVisitors(result);\r\n\r\n    }\r\n\r\n    const getFriend = async() => { //Friends here\r\n        setActivity(2);\r\n        const {data:{data}}= await axios.post(FRIENDLIST_API,bodyParameters)\r\n        setFriendlist(!!data ? data : []);\r\n    }\r\n\r\n    // fetching friends according to userID\r\n    const getFriendDetails = async() => {\r\n        const bodyParameters = {\r\n            session_id: localStorage.getItem('session_id'),\r\n            user_id: FriendUserId,\r\n        };\r\n\r\n        const {data:{data}}= await axios.post(GET_USERPROFILE_API,bodyParameters)\r\n        setData(data);\r\n    }\r\n\r\n    // Adding call functionality here\r\n    const handleCall =() =>{\r\n        const bodyParameters = {\r\n            session_id: localStorage.getItem('session_id'),\r\n            user_id :FriendUserId,\r\n            type : 'audio',\r\n            room_id : '1'\r\n        }\r\n        axios.post(VIDEOCALL_API , bodyParameters)\r\n            .then((response) => {\r\n                if(response.status==200)\r\n                {\r\n                    createNotification('sucess');\r\n                    alert(\"call made successfully\");\r\n                }\r\n            }, (error) => {\r\n\r\n            });\r\n    }\r\n\r\n    const AcceptUserRequest = (LikedUserId) =>{\r\n        const bodyParameters = {\r\n            session_id : sessionId,\r\n            id : LikedUserId\r\n        }\r\n        axios.post(ACCEPT_REQUEST_API , bodyParameters)\r\n            .then((response) => {\r\n                if(response.status==200)\r\n                {\r\n                    createNotification('sucess');\r\n                }\r\n            }, (error) => {\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    //all gift\r\n    const handleGift = async() =>{\r\n        toggleIsOn(true);\r\n        const bodyParameters = {\r\n            session_id :  localStorage.getItem('session_id'),\r\n            }\r\n            const {data:{result}} = await axios.post(GIFT_LIST_API , bodyParameters)\r\n            setGiftData(result);\r\n            }\r\n     \r\n        //get single  gift item\r\n           const getGiftItem = async(giftId) => {\r\n           const bodyParameters ={\r\n           session_id :  localStorage.getItem('session_id') ,\r\n           gift_id : giftId ,\r\n           given_to : FriendUserId\r\n           }\r\n            const {data : {giftStatus}} = await axios.post(GIFT_PURCHASE_API , bodyParameters)\r\n                // alert(giftStatus.get_gifts.image);\r\n\r\n                if(!!giftStatus)\r\n                {\r\n                toggleIsOn(false);\r\n                var msg = {};\r\n                msg.file = giftStatus.get_gifts.image;\r\n                msg.fileName = \"abc_image\";\r\n                msg.sessionId = sessionId;\r\n                msg.reciever_id = receiver_id;\r\n                SOCKET.emit('gift_send', msg);\r\n                setLoading(true);\r\n                }\r\n                else\r\n                {\r\n                    toggleIsOn(false);\r\n                    createNotificationCustom('error');\r\n                    \r\n                }\r\n             }\r\n    /************************************* Working here socket *******************************************************/\r\n\r\n    function readThenSendFile(data){\r\n        var reader = new FileReader();\r\n        reader.onload = function(evt){\r\n            var msg ={};\r\n            msg.file = evt.target.result;\r\n            msg.fileName = data.name;\r\n            msg.sessionId = sessionId;\r\n            msg.reciever_id = receiver_id;\r\n            console.log(msg, \"msg...\")\r\n            SOCKET.emit('media_file', msg);\r\n            setLoading(true);\r\n        };\r\n        reader.readAsDataURL(data);\r\n    }\r\n\r\n\r\n    // Authenicating user here\r\n    const DetermineUser = () => {\r\n        var secondUserDataId = FriendUserId;\r\n        SOCKET.emit(\"authenticate\", {\r\n            session_id: sessionId,\r\n            reciever_id: secondUserDataId\r\n        });\r\n    }\r\n\r\n    // Socket Methods\r\n    const CheckTextInputIsEmptyOrNot = (e) =>  {\r\n        e.preventDefault()\r\n        if ( UserMessage != '') {\r\n            var secondUserDataId = FriendUserId;\r\n            var message = { \"session_id\": sessionId, \"reciever_id\": secondUserDataId, \"message\": UserMessage }\r\n            console.log('sent>>>> Data', message);\r\n            SOCKET.emit(\"send_message\", message);\r\n            setuserMessage(''); //Empty user input here\r\n        } else {\r\n            console.log(\"Please enter message\")\r\n        }\r\n    }\r\n    // Get all messages here\r\n    const GetAllMessages = (messages) => {\r\n        console.log(messages.message_list,\"messages.message_list....\")\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [randomNumber])\r\n// console.log(FriendUserId);\r\n    useEffect(()=>{\r\n        window.setTimeout(() => {\r\n            $('#uploadfile').bind('change', function(e){\r\n                var data = e.originalEvent.target.files[0];\r\n                const fileName = data.name.split(\".\");\r\n                const imageFormat = fileName[fileName.length - 1];\r\n                if (imageFormat === \"png\" || imageFormat === \"jpg\" || imageFormat === \"jpeg\" ||\r\n                    imageFormat === \"PNG\" || imageFormat === \"JPG\" || imageFormat === \"JPEG\") {\r\n                    readThenSendFile(data);\r\n                }\r\n                else {\r\n                    alert(\"Only .png, .jpg, .jpeg image formats supported.\")\r\n                }\r\n            })\r\n        }, 1000);\r\n\r\n        getAllDetails();\r\n\r\n        // Checking the typing user\r\n        SOCKET.on('typing', (typing) => {\r\n            if (!!typing) {\r\n                if ((typing.user_id === userData.user_id && typing.reciever_id === receiver_id)\r\n                    ||\r\n                    (typing.user_id === receiver_id && typing.reciever_id === userData.user_id)\r\n                ) { // check one-to-one data sync\r\n\r\n                    if (typing.user_id !== userData.user_id) {\r\n                        setChatTyping(typing.typing_user)\r\n                        window.setTimeout(() => {\r\n                            setChatTyping(\"\")\r\n                        }, 2000)\r\n\r\n                    }\r\n                }\r\n            }\r\n        })\r\n\r\n        SOCKET.on('message_data', (messages) => {\r\n            // console.log(messages, \"test..\");\r\n            console.log(messageList, \"CompleteMessageList\")\r\n            let messagesList = messageList;\r\n            if (!!messages) {\r\n\r\n                if ((messages.obj.user_from_id === userData.user_id && messages.obj.user_to_id === receiver_id)\r\n                    ||\r\n                    (messages.obj.user_from_id === receiver_id && messages.obj.user_to_id === userData.user_id)\r\n                ) { // check one-to-one data sync\r\n                    messagesList.push(messages.obj);\r\n                    messageList = messagesList;\r\n                    console.log(messagesList, \"messageList...\")\r\n                    setMessages(messagesList);\r\n                    setRandomNumber(Math.random());\r\n                    scrollToBottom()\r\n                }\r\n            }\r\n        });\r\n        SOCKET.on('media_file', (messages) => {\r\n            console.log(messageList, \"CompleteMessageList\")\r\n            let messagesList = messageList;\r\n            if (!!messages) {\r\n                if ((messages.obj.user_from_id === userData.user_id && messages.obj.user_to_id === receiver_id)\r\n                    ||\r\n                    (messages.obj.user_from_id === receiver_id && messages.obj.user_to_id === userData.user_id)\r\n                ) {\r\n                    messagesList.push(messages.obj);\r\n                    messageList = messagesList;\r\n                    console.log(messagesList, \"messageList... pic\")\r\n                    setMessages(messagesList);\r\n                    setuserMessage(''); //Empty user input here\r\n                    setLoading(false);\r\n                    setRandomNumber(Math.random());\r\n                    scrollToBottom()\r\n                }\r\n            }\r\n        });\r\n\r\n        SOCKET.on('gift_send',(messages) =>{\r\n            console.log(messages,\"message_gift....\");\r\n           let messagesList = messageList;\r\n            if(!!messages)\r\n            {\r\n                if ((messages.obj.user_from_id === userData.user_id && messages.obj.user_to_id === receiver_id)\r\n                    ||\r\n                    (messages.obj.user_from_id === receiver_id && messages.obj.user_to_id === userData.user_id)\r\n                )\r\n                {\r\n                    messagesList.push(messages.obj);\r\n                    messageList = messagesList;\r\n                    console.log(messagesList,\"messageList_gift_send ........ \");\r\n                    setMessages(messagesList);\r\n                    setLoading(false);\r\n                    setRandomNumber(Math.random());\r\n                    scrollToBottom();\r\n                }\r\n            }\r\n        });\r\n\r\n        SOCKET.on('voice', function(arrayBuffer) {\r\n            let messagesList = messageList;\r\n            console.log(messageList, \"CompleteMessageList\")\r\n            if (!!arrayBuffer) {\r\n                if ((arrayBuffer.obj.user_from_id === userData.user_id && arrayBuffer.obj.user_to_id === receiver_id)\r\n                    ||\r\n                    (arrayBuffer.obj.user_from_id === receiver_id && arrayBuffer.obj.user_to_id === userData.user_id)\r\n                ) {\r\n                    messagesList.push(arrayBuffer.obj);\r\n                    messageList = messagesList;\r\n                    console.log(messagesList, \"messageList... pic\")\r\n                    setMessages(messagesList);\r\n                    setuserMessage(''); //Empty user input here\r\n                    setRandomNumber(Math.random());\r\n                    scrollToBottom()\r\n                }\r\n            }\r\n            // src= window.URL.createObjectURL(blob);\r\n\r\n        });\r\n\r\n\r\n    },[])\r\n\r\n    // On text typing value\r\n    const changeInput = (e) => {\r\n        setuserMessage(e.target.value)\r\n        SOCKET.emit(\"typing\", {\r\n            user_id: userData.user_id,\r\n            typing_user: userData.first_name + \" \" + userData.last_name,\r\n            reciever_id: receiver_id\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (GetActivity === 2) {\r\n            console.log(\"connect socket\")\r\n\r\n            SOCKET.connect();\r\n        }\r\n        else {\r\n            // SOCKET.disconnect();\r\n        }\r\n    },[GetActivity])\r\n\r\n    useEffect(()=>{\r\n\r\n        if (GetActivity === 2) {\r\n            setMessages([]);\r\n            messageList = [];\r\n            getFriendDetails();\r\n            SOCKET.on('getMessage', (messages) => { // only one time\r\n                setLoading(false);\r\n                console.log(messages, \"messages..\")\r\n                console.log(messages, \"hahahaha\")\r\n                setMessages(messages.message_list);\r\n                messageList = messages.message_list;\r\n            });\r\n        }\r\n        if (!!FriendUserId) {\r\n            receiver_id = FriendUserId;\r\n            DetermineUser();\r\n            setLoading(true);\r\n            //  GetAllMessages();\r\n            //  OnReceivedMessage();\r\n\r\n        }\r\n        // get messagesfrom socket...\r\n\r\n    },[FriendUserId])\r\n\r\n    var blobToBase64 = function(blob, callback) {\r\n        var reader = new FileReader();\r\n        reader.onload = function() {\r\n            var dataUrl = reader.result;\r\n            var base64 = dataUrl.split(',')[1];\r\n            return callback(base64);\r\n        };\r\n        reader.readAsDataURL(blob);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(recording, \"record....\")\r\n    }, [recording])\r\n    const sendVoiceNote = () => {\r\n        console.log(recording, \"recordddddddd\")\r\n        if (!dummyMediaRc) {\r\n            var constraints = {audio: true};\r\n            let recordAudio = false;\r\n            if ( !!navigator.mediaDevices) {\r\n                navigator.mediaDevices.getUserMedia(constraints).then(function (mediaStream) {\r\n                    recordAudio = true;\r\n                    var mediaRecorder = new MediaRecorder(mediaStream);\r\n\r\n                    mediaRecorder.onstart = function (e) {\r\n                        setDummyMediaRc(mediaRecorder);\r\n                        this.chunks = [];\r\n                    };\r\n                    mediaRecorder.ondataavailable = function (e) {\r\n                        this.chunks.push(e.data);\r\n                    };\r\n                    mediaRecorder.onstop = function (e) {\r\n                        var blob = new Blob(this.chunks,);\r\n                        console.log(blob, \"blob.....\")\r\n                        blobToBase64(blob, (output) => {\r\n                            SOCKET.emit('radio', {blob: 'data:audio/mp3;base64,' + output, sessionId, reciever_id: FriendUserId});\r\n                        })\r\n                    };\r\n\r\n                    // Start recording\r\n                    mediaRecorder.start();\r\n                }).catch(function (err) {\r\n                    createNotification('error-message')\r\n                    alert(err.message)\r\n                })\r\n            }\r\n            else {\r\n                alert(\"You need a secure https connection in order to record voice\")\r\n            }\r\n        }\r\n        else {\r\n            console.log(dummyMediaRc, \"media rec...\")\r\n            dummyMediaRc.stop();\r\n            setDummyMediaRc(null);\r\n        }\r\n    }\r\n    useEffect( () => {\r\n        console.log(CompleteMessageList.length, \"CompleteMessageList length...\")\r\n        scrollToBottom()\r\n    }, [CompleteMessageList])\r\n\r\n    /*=============================== Video Call ========================================================*/\r\n\r\n    const handleVideo = (image) =>{\r\n        var secondUserDataId = FriendUserId;\r\n        dispatch(\r\n            videoCall({\r\n                user_from_id: userData.user_id,\r\n                user_to_id: secondUserDataId,\r\n                user_to_image: image,\r\n                channel_id: uuidv4(),\r\n                channel_name: null,\r\n                channel_token: null\r\n            })\r\n        );\r\n        history.push(\"/searching-profile\");\r\n    }\r\n\r\n\r\n    const createNotification = (type) => {\r\n        return () => {\r\n            switch (type) {\r\n\r\n                case 'success':\r\n                    NotificationManager.success('Success message', 'Title here');\r\n                    break;\r\n                case 'error-secure':\r\n                    NotificationManager.error('err.message', 'Click me!', 5000, () => {\r\n                    });\r\n                case 'error-message':\r\n                    NotificationManager.error('err.message', 'Click me!', 5000, () => {\r\n\r\n                    });\r\n                    break;\r\n            }\r\n        };\r\n    };\r\n    return(\r\n\r\n        <section className=\"home-wrapper\">\r\n            <img className=\"bg-mask\" src=\"/assets/images/mask-bg.png\" alt=\"Mask\" />\r\n            <div className=\"header-bar\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"row no-gutters align-items-center\">\r\n                        <div className=\"col-lg-3 p-3\">\r\n                            <div className=\"d-flex flex-wrap align-items-center\">\r\n                                <div className=\"logo-tab d-flex justify-content-between align-items-start\">\r\n                                    <a href=\"javascript:void(0)\">\r\n                                        <Logo/>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"rcall-head text-center\">\r\n                                <h4>Activity</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-5 p-3\">\r\n                            <div className=\"tab-top d-flex flex-wrap-wrap align-items-center\">\r\n                                <div className=\"vc-action-tab ml-auto mr-4\">\r\n              <span>\r\n                <i className=\"fas fa-crown\" />\r\n              </span>\r\n                                    <span className=\"member-type\">VIP</span>\r\n                                </div>\r\n                                <NavLinks />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-box-wrapper\">\r\n                <div className=\"container\">\r\n                    <div className=\"row panel messages-panel\">\r\n                        <div className=\"contacts-list col-md-4\">\r\n                            <ul className=\"nav inbox-categories d-flex flex-wrap mb-3\" role=\"tablist\">\r\n                                <li className=\"nav-item\">\r\n                                    <a id=\"tab-like\" href=\"#like\" className=\"nav-link active\" data-toggle=\"tab\" role=\"tab\" onClick={getLikes} >Like</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a id=\"tab-visitors\" href=\"#visitors\" className=\"nav-link\" data-toggle=\"tab\" role=\"tab\" onClick={getVisitors} >Visitors</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a id=\"tab-chat\" href=\"#chat\" className=\"nav-link\" onClick={getFriend} data-toggle=\"tab\" role=\"tab\">Chat</a>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"tab-content\" role=\"tablist\">\r\n                                <div id=\"like\" className=\"contacts-outter-wrapper tab-pane fade show active\" role=\"tabpanel\" aria-labelledby=\"tab-like\">\r\n                                    <div className=\"contacts-outter\">\r\n\r\n                                        {/* { isLoaded && */}\r\n                                        <ul className=\"nav contacts\" role=\"tablist\">\r\n\r\n                                            { Likes.map((item, i) => {\r\n                                                return   <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link\" href=\"#chat-field\" data-toggle=\"tab\" data-id={item.like_id} role=\"tab\" onClick = {() =>AcceptUserRequest(item.like_id)}>\r\n                                                        <img alt={item.first_name} className=\"img-circle medium-image\" src={item.profile_images} />\r\n                                                        <div className=\"contacts_info\">\r\n                                                            <div className=\"user_detail\">\r\n                                                                <span className=\"message-time\">{item.created_at}</span>\r\n                                                                <h5 className=\"mb-0 name\">{item.first_name}</h5>\r\n                                                                {/* <div className=\"message-count\">2</div> */}\r\n                                                            </div>\r\n                                                            <div className=\"vcentered info-combo\">\r\n                                                                <p>Yep, I'm new in town and I wanted</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </a>\r\n\r\n                                                </li>\r\n\r\n                                            })}\r\n\r\n                                        </ul>\r\n                                        {/* } */}\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"visitors\" className=\"contacts-outter-wrapper tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"tab-visitors\">\r\n                                    <div className=\"contacts-outter\">\r\n                                        <ul className=\"nav contacts\" role=\"tablist\">\r\n\r\n                                            { Visitors.map((item, i) => {\r\n                                                return <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link\" href=\"#chat-field\" data-toggle=\"tab\" role=\"tab\" >\r\n                                                        <img alt={item.full_name} className=\"img-circle medium-image\" src={item.profile_images}/>\r\n                                                        <div className=\"contacts_info\">\r\n                                                            <div className=\"user_detail\">\r\n                                                                <span className=\"message-time\">{item.created_at}</span>\r\n                                                                <h5 className=\"mb-0 name\">{item.full_name}</h5>\r\n                                                                {/* {/* <div className=\"message-count\">2</div> */}\r\n                                                            </div>\r\n                                                            <div className=\"vcentered info-combo\">\r\n                                                                <p>Yep, I'm new in town and I wanted</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </a>\r\n                                                </li>\r\n                                            })}\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"chat\" className=\"contacts-outter-wrapper tab-pane fade\" role=\"tabpanel\" aria-labelledby=\"tab-chat\">\r\n                                    <div className=\"contacts-outter\">\r\n                                        <ul className=\"nav contacts\" role=\"tablist\">\r\n\r\n                                            { FriendList.map((item, i) => {\r\n                                                return <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link\" href=\"#chat-field\" data-toggle=\"tab\" data-id={item.user_id} role=\"tab\" onClick={() =>  setFriendId(item.user_id)}>\r\n\r\n                                                        <img alt=\"Mia\" className=\"img-circle medium-image\" src={item.profile_images} />\r\n                                                        <div className=\"contacts_info\">\r\n                                                            <div className=\"user_detail\">\r\n                                                                <span className=\"message-time\">{item.created_at}</span>\r\n                                                                <h5 className=\"mb-0 name\">{item.first_name}</h5>\r\n                                                                {/* <div className=\"message-count\">2</div> */}\r\n                                                            </div>\r\n                                                            <div className=\"vcentered info-combo\">\r\n                                                                <p>Yep, I'm new in town and I wanted</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </a>\r\n                                                </li>\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Chat box here */}\r\n                        {GetActivity === 2 ?\r\n                            <div className=\"col-md-8 tab-content chat-block\" role=\"tablist\">\r\n                                <div className=\"nothing-to-see text-center active\">\r\n                                    <figure>\r\n                                        <img src=\"/assets/images/message-circle.png\" alt=\"Message\" />\r\n                                        <figcaption>Nothing To See</figcaption>\r\n                                    </figure>\r\n                                </div>\r\n                                <div className=\"tab-pane tab-pane fade\" id=\"chat-field\">\r\n                                    <div className=\"message-top d-flex flex-wrap align-items-center justify-content-between\">\r\n                                        <div className=\"chat-header-info d-flex align-items-center\">\r\n                                            {!!AllData ? <img alt=\"Mia\" className=\"img-circle medium-image\" src={AllData.profile_images}/> : \"\"}\r\n                                            <div className=\"chat-user-info ml-2\">\r\n                                                {!!AllData ? <h5 className=\"mb-0 name\">{AllData.first_name}</h5> : <h5>  </h5> }\r\n                                                <div className=\"info\">\r\n                                                    {!!AllData &&\r\n                                                    <>{AllData.occupation},  {AllData.age} </>\r\n                                                    }\r\n                                                    {<> , </>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"chat-call-opt\">\r\n                                            <a className=\"bg-grd-clr\" onClick = {handleCall} href=\"javascript:void(0)\">\r\n                                                <NotificationContainer/>\r\n                                                <i className=\"fas fa-phone-alt\" />\r\n\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Video call */}\r\n                                        <div className=\"chat-call-opt\">\r\n                                            <a className=\"bg-grd-clr\" onClick = {() => handleVideo(AllData.profile_images[0])} href=\"javascript:void(0)\">\r\n                                                <NotificationContainer/>\r\n                                                <i className=\"fas fa-video\" />\r\n\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/*<div className=\"chat-date text-center my-2\">Today</div>*/}\r\n                                    <div className=\"message-chat\">\r\n\r\n                                        <div className=\"chat-body\" id={\"chat-body\"}>\r\n                                            {\r\n                                                CompleteMessageList.map((data, i) => (\r\n                                                    <div>\r\n                                                        {\r\n                                                            (data.user_from_id === FriendUserId) ?\r\n                                                                <div className=\"message info\">\r\n                                                                    <div className=\"message-body\">\r\n                                                                        {\r\n                                                                            !!data.media &&\r\n                                                                            <div className=\"media-socket\">\r\n                                                                                <img src={data.media}/>\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                        {\r\n                                                                            !!data.message &&\r\n                                                                            <div className=\"message-text\">\r\n                                                                                <p>{data.message}</p>\r\n                                                                            </div>\r\n                                                                        }\r\n                                                                        {\r\n                                                                            !!data.audio &&\r\n                                                                            <div  className=\"audio-socket\">\r\n                                                                                <audio controls src={data.audio} className=\"audio-left\"/>\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                :\r\n                                                                <div className=\"message my-message \">\r\n                                                                    <div className=\"message-body\">\r\n                                                                        {\r\n                                                                            !!data.media &&\r\n                                                                            <div className=\"media-socket\">\r\n                                                                                <img src={data.media}/>\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                        {\r\n                                                                            !!data.message &&\r\n                                                                            <div className=\"message-text\">\r\n                                                                                <p>{data.message}</p>\r\n                                                                            </div>\r\n                                                                        }\r\n                                                                        {\r\n                                                                            !!data.audio &&\r\n                                                                            <div>\r\n                                                                                <audio controls src={data.audio} className=\"audio-right\"/>\r\n                                                                            </div>\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                        }\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                            <NotificationContainer/>\r\n                                        </div>\r\n                                        <form onSubmit={CheckTextInputIsEmptyOrNot}>\r\n\r\n                                            <div className=\"chat-footer\">\r\n                                                <div className=\"sweet-loading\">\r\n                                                    <BarLoader color={\"#fcd46f\"} loading={loading} css={override} size={1000} />\r\n                                                </div>\r\n                                                <label className=\"upload-file\">\r\n                                                    <div>\r\n                                                        <input id=\"uploadfile\" type=\"file\" accept=\".png, .jpg, .jpeg, .PNG, .JPG, .JPEG\" />\r\n                                                        <i className=\"far fa-image\" />\r\n                                                    </div>\r\n                                                </label>\r\n                                                {/* <textarea className=\"send-message-text\" placeholder=\"Message...\" defaultValue={UserMessage} /> */}\r\n                                                <input className=\"send-message-text\" name=\"Message\" id=\"Message\" type=\"text\" placeholder=\"Message...\" value={UserMessage} onChange={e => changeInput(e)} />\r\n                                                <label className=\"gift-message bg-grd-clr\">\r\n                                                    <a href=\"javascript:void(0)\" onClick={handleGift} >\r\n                                                        <i className=\"fas fa-gift\" />\r\n                                                    </a>\r\n                                                </label>\r\n                                                <label className=\"record-message\">\r\n                                                    <a  onClick={sendVoiceNote}>\r\n                                                        {\r\n                                                            dummyMediaRc &&\r\n                                                            <i className=\"fas fa-microphone-slash\"/>\r\n                                                        }\r\n                                                        {\r\n                                                            !dummyMediaRc &&\r\n                                                            <i className=\"fas fa-microphone\" />\r\n                                                        }\r\n\r\n                                                    </a>\r\n                                                    <NotificationContainer/>\r\n                                                </label>\r\n                                                <button type=\"submit\" className=\"send-message-button bg-grd-clr\"><i className=\"fas fa-paper-plane\" /></button>\r\n                                                {\r\n                                                    !!chatTyping &&\r\n                                                    <div>{chatTyping} is typing...</div>\r\n                                                }\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            :<div className=\"nothing-to-see text-center active\">\r\n                                <figure>\r\n                                    <img src=\"/assets/images/message-circle.png\" alt=\"Message\" />\r\n                                    <figcaption>Nothing To See</figcaption>\r\n                                </figure>\r\n                            </div> }\r\n\r\n                        {/* End chat box here */}\r\n                        <div className={isOn ? 'all-gifts-wrapper active': 'all-gifts-wrapper '} >\r\n                            <div className=\"all-gift-inner\">\r\n                                <a href=\"javascript:void(0)\" className=\"close-gift-btn modal-close\" onClick={toggleIsOn}><img src=\"/assets/images/btn_close.png\" /></a>\r\n                                <div className=\"all-gift-header d-flex flex-wrap align-items-center mb-3\">\r\n                                    <h5 className=\"mb-0 mr-4\">Send Gift</h5>\r\n                                    <div className=\"remaining-coins\">\r\n                                        <img src=\"/assets/images/diamond-coin.png\" alt=\"Coins\" />\r\n                                        <span>152</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"all-gift-body\">\r\n\r\n                                    <ul className=\"d-flex flex-wrap text-center\">\r\n                                        {GiftData.map((items , i) => {\r\n                                            return <li onClick={() => getGiftItem(items.id)}>\r\n                                                <a href=\"javascript:void(0)\" >\r\n                                                    <div>\r\n                                                        <figure>\r\n                                                            <img src={items.image} alt={items.name} />\r\n                                                        </figure>\r\n                                                        <div className=\"gift-price\">\r\n                                                            <img src=\"/assets/images/diamond-coin.png\" alt=\"Coins\" />\r\n                                                            <span>{items.coins}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                        })}\r\n                                        <li>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default ChatBox;",{"ruleId":"63","severity":1,"message":"64","line":10,"column":9,"nodeType":"65","messageId":"66","endLine":10,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":10,"column":16,"nodeType":"65","messageId":"66","endLine":10,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":10,"column":28,"nodeType":"65","messageId":"66","endLine":10,"endColumn":36},{"ruleId":"63","severity":1,"message":"69","line":22,"column":11,"nodeType":"65","messageId":"66","endLine":22,"endColumn":23},{"ruleId":"63","severity":1,"message":"70","line":23,"column":10,"nodeType":"65","messageId":"66","endLine":23,"endColumn":24},{"ruleId":"63","severity":1,"message":"71","line":27,"column":9,"nodeType":"65","messageId":"66","endLine":27,"endColumn":22},{"ruleId":"63","severity":1,"message":"72","line":32,"column":8,"nodeType":"65","messageId":"66","endLine":32,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":82,"column":5,"nodeType":"75","endLine":82,"endColumn":15,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":157,"column":29,"nodeType":"79","messageId":"80","endLine":157,"endColumn":31},{"ruleId":"73","severity":1,"message":"81","line":193,"column":7,"nodeType":"75","endLine":193,"endColumn":9,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"81","line":202,"column":5,"nodeType":"75","endLine":202,"endColumn":12,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":241,"column":13,"nodeType":"86","endLine":241,"endColumn":42},{"ruleId":"87","severity":1,"message":"88","line":241,"column":21,"nodeType":"89","messageId":"90","endLine":241,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":245,"column":15,"nodeType":"86","endLine":245,"endColumn":44},{"ruleId":"87","severity":1,"message":"88","line":245,"column":23,"nodeType":"89","messageId":"90","endLine":245,"endColumn":43},{"ruleId":"84","severity":1,"message":"85","line":291,"column":21,"nodeType":"86","endLine":291,"endColumn":50},{"ruleId":"87","severity":1,"message":"88","line":291,"column":29,"nodeType":"89","messageId":"90","endLine":291,"endColumn":49},{"ruleId":"77","severity":1,"message":"78","line":296,"column":36,"nodeType":"79","messageId":"80","endLine":296,"endColumn":38},{"ruleId":"84","severity":1,"message":"85","line":307,"column":21,"nodeType":"86","endLine":307,"endColumn":50},{"ruleId":"87","severity":1,"message":"88","line":307,"column":29,"nodeType":"89","messageId":"90","endLine":307,"endColumn":49},{"ruleId":"77","severity":1,"message":"78","line":348,"column":30,"nodeType":"79","messageId":"80","endLine":348,"endColumn":32},{"ruleId":"63","severity":1,"message":"91","line":12,"column":9,"nodeType":"65","messageId":"66","endLine":12,"endColumn":19},{"ruleId":"63","severity":1,"message":"92","line":43,"column":11,"nodeType":"65","messageId":"66","endLine":43,"endColumn":19},{"ruleId":"63","severity":1,"message":"93","line":43,"column":21,"nodeType":"65","messageId":"66","endLine":43,"endColumn":32},{"ruleId":"63","severity":1,"message":"94","line":53,"column":22,"nodeType":"65","messageId":"66","endLine":53,"endColumn":34},{"ruleId":"95","severity":1,"message":"96","line":59,"column":9,"nodeType":"97","messageId":"98","endLine":67,"endColumn":8},{"ruleId":"63","severity":1,"message":"99","line":94,"column":15,"nodeType":"65","messageId":"66","endLine":94,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":140,"column":35,"nodeType":"79","messageId":"80","endLine":140,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":157,"column":35,"nodeType":"79","messageId":"80","endLine":157,"endColumn":37},{"ruleId":"77","severity":1,"message":"100","line":236,"column":26,"nodeType":"79","messageId":"80","endLine":236,"endColumn":28},{"ruleId":"63","severity":1,"message":"101","line":247,"column":11,"nodeType":"65","messageId":"66","endLine":247,"endColumn":25},{"ruleId":"73","severity":1,"message":"102","line":375,"column":7,"nodeType":"75","endLine":375,"endColumn":9,"suggestions":"103"},{"ruleId":"73","severity":1,"message":"104","line":422,"column":7,"nodeType":"75","endLine":422,"endColumn":21,"suggestions":"105"},{"ruleId":"63","severity":1,"message":"106","line":444,"column":21,"nodeType":"65","messageId":"66","endLine":444,"endColumn":32},{"ruleId":"95","severity":1,"message":"96","line":504,"column":13,"nodeType":"97","messageId":"98","endLine":517,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":512,"column":17,"nodeType":"109","messageId":"110","endLine":516,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":530,"column":37,"nodeType":"86","endLine":530,"endColumn":66},{"ruleId":"87","severity":1,"message":"88","line":530,"column":45,"nodeType":"89","messageId":"90","endLine":530,"endColumn":65},{"ruleId":"84","severity":1,"message":"85","line":677,"column":45,"nodeType":"86","endLine":677,"endColumn":120},{"ruleId":"87","severity":1,"message":"88","line":677,"column":99,"nodeType":"89","messageId":"90","endLine":677,"endColumn":119},{"ruleId":"84","severity":1,"message":"85","line":685,"column":45,"nodeType":"86","endLine":685,"endColumn":154},{"ruleId":"87","severity":1,"message":"88","line":685,"column":133,"nodeType":"89","messageId":"90","endLine":685,"endColumn":153},{"ruleId":"111","severity":1,"message":"112","line":707,"column":81,"nodeType":"86","endLine":707,"endColumn":104},{"ruleId":"111","severity":1,"message":"112","line":732,"column":81,"nodeType":"86","endLine":732,"endColumn":104},{"ruleId":"84","severity":1,"message":"85","line":772,"column":53,"nodeType":"86","endLine":772,"endColumn":104},{"ruleId":"87","severity":1,"message":"88","line":772,"column":61,"nodeType":"89","messageId":"90","endLine":772,"endColumn":81},{"ruleId":"84","severity":1,"message":"113","line":777,"column":53,"nodeType":"86","endLine":777,"endColumn":81},{"ruleId":"84","severity":1,"message":"85","line":812,"column":33,"nodeType":"86","endLine":812,"endColumn":122},{"ruleId":"87","severity":1,"message":"88","line":812,"column":41,"nodeType":"89","messageId":"90","endLine":812,"endColumn":61},{"ruleId":"111","severity":1,"message":"112","line":812,"column":122,"nodeType":"86","endLine":812,"endColumn":164},{"ruleId":"84","severity":1,"message":"85","line":825,"column":49,"nodeType":"86","endLine":825,"endColumn":79},{"ruleId":"87","severity":1,"message":"88","line":825,"column":57,"nodeType":"89","messageId":"90","endLine":825,"endColumn":77},"no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'ModalBody' is defined but never used.","'Dropdown' is defined but never used.","'randomNumber' is assigned a value but never used.","'fetchedProfile' is assigned a value but never used.","'StartPosition' is assigned a value but never used.","'showLive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleStatus'. Either include it or remove the dependency array.","ArrayExpression",["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],["116"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'selectUser' is defined but never used.","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'setRecording' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'data' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'GetAllMessages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllDetails' and 'readThenSendFile'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has missing dependencies: 'DetermineUser', 'GetActivity', and 'getFriendDetails'. Either include them or remove the dependency array.",["118"],"'recordAudio' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [friendId, handleStatus]",{"range":"129","text":"130"},"Update the dependencies array to be: [history]",{"range":"131","text":"132"},"Update the dependencies array to be: [Click, history]",{"range":"133","text":"134"},"Update the dependencies array to be: [getAllDetails, readThenSendFile]",{"range":"135","text":"136"},"Update the dependencies array to be: [DetermineUser, FriendUserId, GetActivity, getFriendDetails]",{"range":"137","text":"138"},[2542,2552],"[friendId, handleStatus]",[6203,6205],"[history]",[6408,6415],"[Click, history]",[13897,13899],"[getAllDetails, readThenSendFile]",[15205,15219],"[DetermineUser, FriendUserId, GetActivity, getFriendDetails]"]