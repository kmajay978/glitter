[{"/sandeep Data/glitter/src/pages/SearchHome.js":"1"},{"size":15315,"mtime":1612175374334,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"dxksyu","/sandeep Data/glitter/src/pages/SearchHome.js",["7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport $ from 'jquery';\nimport {  useHistory } from 'react-router';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\nimport NavLinks from '../components/Nav';\nimport FilterSide from '../components/Filter';\nimport { FRIENDLIST_API , GET_STATUS} from '../components/Api';\nimport {Modal, ModalBody , Dropdown} from 'react-bootstrap';\nimport OwlCarousel from 'react-owl-carousel2';\nimport {SOCKET} from '../components/Config';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userProfile} from \"../features/userSlice\";\nimport {generateLiveVideoChatToken} from \"../api/videoApi\";\n\nlet isMouseClick = false, startingPos = [], glitterUid, friendLists = [], userData= null;\nconst SearchHome = () =>\n{\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const[randomNumber, setRandomNumber] = useState('');\n    const [fetchedProfile, setFilterUser] = useState('');\n    const [ friendList  , setFriendlist] = useState([]);\n\n    const [Click, setClick] = useState(false);\n    const [StartPosition, setStartPosition] = useState([])\n    const [statusData , setStatusData] = useState({});\n    const [storyData , setStoryData] = useState([]);\n    const[ friendId , setFriendId] = useState('');\n    const [statusLength , setStatusLength] = useState(\"\");\n    const [showImage , setShowImage] = useState(false); //state for edit profile image model\n    const [picture, setPicture] = useState(null);\n    const [imgData, setImgData] = useState(null);\n\n    const handleImage =() => setShowImage(true);//upload status model\n    const [showLive,setShowLive] = useState(false);\n\n\n\n    userData = useSelector(userProfile).user.profile; //using redux useSelector here\n    console.log(userData, \"test\")\n    \n    const options = {\n      loop: false,\n      margin: 20,\n      items: 13,\n      nav: false,\n      autoplay: true\n      };\n\n   const statusoptions = {\n     loop: false,\n     slideSpeed: 3000,\n     dots:true,\n     margin: 0,\n     items: 1,\n     smartSpeed: 1000,\n     nav: false,\n     autoplay: true,\n     autoplayTimeout: 3000,\n   };\n\n  const handleFriendList = () => {\n    const bodyParameters ={\n      session_id : localStorage.getItem('session_id')\n    }\n   axios.post(FRIENDLIST_API,bodyParameters)\n    .then((response) => {\n      if (response.status === 200 ) {\n          let friendList = response.data.data;\n          console.log(friendList, \"friendList...\")\n          for (let i in friendList) {\n              friendList[i].is_live = false;\n          }\n          friendLists = friendList;\n        setFriendlist(friendList);\n        setStatusLength(response.data.data.statuses);\n      }\n }, (error) => {\n  setFriendlist('');\n});\n  }\n   console.log(statusLength);\n  useEffect  (() => {\n   handleStatus();\n  },[friendId])\n\n  console.log(friendId);\n  \n  const handleStatus = () =>\n  {\n    const bodyParameters = {\n      user_id: friendId,\n    };\n    axios.post(GET_STATUS,bodyParameters)\n    .then((response) => {\n      if (response.status === 200 && !response.status.error) {\n        setStatusData(response.data);\n        setStoryData(response.data.result);\n      }\n      else {\n        setStatusData('');\n      }\n\n }, (error) => {\n    setStatusData('');\n});\n  }\nconsole.log(statusData);\n console.log(storyData);\n\n const handleFileChange = e => {\n  if (e.target.files[0]) \n  {\n    setPicture(e.target.files[0]);\n    const reader = new FileReader();\n    reader.addeListener(\"load\", () => {\n      setImgData(reader.result);\n     });\n    reader.readAsDataURL(e.target.files[0]);\n  }\n};\n\n//  const componentWillUnmount = () => {\n//      //alert(\"stop\")\n//      SOCKET.emit('stop_check_friend_list_live', () => {\n//          console.log(\"stop checking friend list live...\")\n//      });\n//  }\n  useEffect (() => {\n    SOCKET.connect();\n      SOCKET.emit(\"authenticate_friend_list_live\", {\n          session_id: localStorage.getItem(\"session_id\")\n      });\n    handleFriendList();\n\n      SOCKET.on('sendAudienceToLiveVideo', (data) => {\n        console.log(userData, data, \"kkkkkk\")\n          if (userData.user_id === data.user_id) {\n              $('#live-modal').hide();\n              setShowLive(false)\n              var newState = {};\n              newState.user_id = data.user_id;\n              newState.call_type = 2;\n              newState.channel_id = data.channel_id;\n              newState.channel_name = data.channel_name;\n              newState.channel_token = data.channel_token;\n              localStorage.setItem(\"liveVideoProps\", JSON.stringify(newState))\n              history.push('/'+data.host_id+ '/' + uuidv4() +'/'+ data.channel_name + '/live-video-chat')\n          }\n      })\n\n    SOCKET.on('live_friends', (data) => {\n        let frdList = friendLists;\n        console.log(frdList, \"mmmm\")\n        const totalLiveFrds = data;\n        for (let i in frdList) {\n            for (let j in totalLiveFrds) {\n                if (totalLiveFrds[j].user_id === frdList[i].user_id) {\n                    frdList[i].is_live = true;\n                    frdList[i].channel_id = uuidv4();\n                    frdList[i].channel_name = totalLiveFrds[j].channel_name;\n                    frdList[i].channel_token = totalLiveFrds[j].channel_token;\n                }\n            }\n        }\n        setFriendlist(frdList);\n        setRandomNumber(Math.random());\n        console.log(frdList, \"data test\")\n    });\n      SOCKET.on('start_your_live_video_now', (data) => {\n          console.log(data, userData, \"start live video link...\");\n          if ((data.user_id == userData.user_id) && data.channel_id && data.channel_name) {\n              $('#live-modal').hide();\n              setShowLive(false)\n              history.push(data.user_id+ '/' + data.channel_id +'/'+ data.channel_name + '/live-video-chat')\n          }\n      });\n\n    window.setTimeout(() => {\n       $(\".main\")\n    .mousedown(function (evt) {\n      isMouseClick = true;\n      glitterUid =  $(\".main\")\n\n        startingPos = [evt.pageX, evt.pageY]\n        glitterUid = evt.currentTarget.id\n        // setStartPosition(startingPos);\n\n    })\n    .mousemove(function (evt) {\n        if (!(evt.pageX === startingPos[0] && evt.pageY === startingPos[1])) {\n            isMouseClick = false;\n        }\n    })\n    .mouseup(function () {\n        if (!isMouseClick) {\n           setClick(isMouseClick)\n        } else {\n          isMouseClick = true\n           setClick(isMouseClick)\n        }\n        startingPos = [];\n        setStartPosition(startingPos)\n    });\n    // $(\".upload__media\").on(\"click\", function(){\n    //   alert(12)\n    //   $(this).find(\"input\").trigger(\"click\");\n    // });\n\n    }, 1000);\n    // return () => componentWillUnmount()\n\n// File upload view\n\n    },[])\n    const uploadImage = () => {\n      $(document).on('click', '.modal-content', function(){ \n        alert(\"button is clicked\");\n        console.log(\"test\", \"working\");\n      });\n    }\n\n    const hiddenFileInput = useRef('');\n\n    const handleClick = () => {\n      hiddenFileInput.current.click();\n    }\n\n  useEffect (() => {\n    if (Click) {\n      history.push({\n                    pathname: '/single-profile',\n                    userId: glitterUid // Your userId\n                  })\n  }\n  },[Click])\n\n    // useEffect(() => {\n    //     if (!!userData) {\n    //\n    //     }\n    // }, [userData])\n//  console.log(friendList);\n//   console.log(fetchedProfile);\n\n    const makeMeLive = () => {\n        const bodyParameters ={\n            session_id: localStorage.getItem(\"session_id\"),\n            user_id: userData.user_id,\n            type: 1\n        }\n        const call_type = 1, user_id = userData.user_id;\n        generateLiveVideoChatToken(dispatch, bodyParameters, call_type, user_id, uuidv4(), SOCKET);\n\n    }\n    const makeMeAudience = (item) => {\n        setFriendId(item.user_id);\n        if (item.is_live) {\n            SOCKET.emit(\"addAudienceToLiveVideo\", {\n                user_id: userData.user_id,\n                channel_name: item.channel_name,\n                channel_token: item.channel_token,\n                is_host: false\n            })\n        }\n    }\n    return(\n  <section className=\"home-wrapper\">\n  <img className=\"bg-mask\" src=\"/assets/images/mask-bg.png\" alt=\"Mask\" />\n  <div className=\"home-inner\">\n    <div className=\"container-fluid p-0\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-lg-3 option-bar p-3 vh-100 position-fixed\">\n          <div className=\"logo-tab mb-5 d-flex justify-content-between align-items-start\">\n            <a href=\"javascript:void(0)\">\n              <img src=\"/assets/images/glitters.png\" alt=\"Glitters\" />\n            </a>\n            <span className=\"chat-point\">\n              <a href=\"javascript:void(0)\">\n                <i className=\"fas fa-comment\" />\n              </a>\n            </span>\n          </div>\n         <FilterSide setFilterUser={setFilterUser}/>\n        </div>\n        <div className=\"col-lg-9 main-bar p-3\" style={{marginLeft: '25%'}}>\n          <div className=\"tab-top d-flex flex-wrap-wrap\">\n            <div className=\"live-icon\">\n              <img src=\"/assets/images/live.png\" alt=\"Live\" />\n            </div>\n            <NavLinks />\n          </div>\n          <div className=\"search-section-wrapper mt-4 px-4\">\n            <div className=\"users-listing\">\n                <div className=\"add__status\" onClick={() => setShowLive(true)}>+</div>\n\n                <div className=\"status__slider\">\n        <OwlCarousel  options={options}  >\n        {friendList.map((item, i) =>(\n        // (statusLength.error==\"\") ?\n         <div className=\"users-listing__slider__items\" onClick={() =>  makeMeAudience(item)} id={item.user_id}  >\n            <div className=\"users-listing__slider__items__image\"  data-toggle=\"modal\" data-target=\"#status-modal\" >\n           {!!friendList ? <img src={item.profile_images} alt=\"marlene\" /> : \"\"}\n              <span className=\"circle-shape\" />\n            </div>\n             {\n                 item.is_live === true &&\n                 <span className=\"live\">Live</span>\n             }\n          </div>\n          // : \"\"\n         ))}\n\n        </OwlCarousel>\n                </div>\n\n\n\n      </div>\n            <div className=\"search-people-row\">\n              <div className=\"row\">\n                {friendList.map((item,i) => {\n               return <div className=\" main col-md-3\" id={item.user_id}  >\n                  <div className=\"sp-singular\">\n                    <a href=\"javascript:void(0)\">\n                      <figure>\n                        <img src={item.profile_images} alt=\"Marlene\" />\n                      </figure>\n                      <div className=\"sp-singular-content\">\n                      {item.online == '0'? <div className=\"status offline\">Offline</div>: <div className=\"status online\">Online</div>}\n\n                        <h4>{item.first_name + ' ' + item.last_name} <span className=\"age\">{item.age}</span></h4>\n                        <div className=\"info\">{item.distance}, {item.occupation}</div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n                })}\n                <div className=\"col-md-3\">\n                  <div className=\"sp-singular\">\n                    <a href=\"javascript:void(0)\">\n                      <figure>\n                        <img src=\"/assets/images/marlene.png\" alt=\"Marlene\" />\n                      </figure>\n                      <div className=\"sp-singular-content\">\n                        <div className=\"status online\">Online</div>\n                        <h4>Marlene, <span className=\"age\">21</span></h4>\n                        <div className=\"info\">55km, Art. Director</div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div className=\"modal fade\" id=\"status-modal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n\n  <div className=\"modal-dialog\" role=\"document\">\n\n         <div className=\"modal-body p-0\">\n        <div className=\"status-info\">\n          <div className=\"status_image\">\n            <img src=\"/assets/images/marlene_user.jpg\" alt=\"user\" />\n          </div>\n          <div className=\"status_heading\">\n            <h6>{statusData.first_name}• {statusData.age}</h6>\n            <span className=\"timer d-block\">9 Seconds</span>\n\n            <span className=\"status_view\"><img src=\"/assets/images/eye-icon.svg\" alt=\"eye\" /></span>\n\n           </div>\n        </div>\n        <OwlCarousel  options={statusoptions} id=\"status-bar\">\n     {!!storyData && <>\n     {storyData.map((items ,i) => {\n       return <div className=\"status-bar__items\">\n         {items.statuses_type==1 ?  <img src={items.file} alt=\"status\" /> : <video src={items.file} alt=\"status\" />}\n\n          </div>\n        })}\n        </>\n     }\n        {\n          <></>\n        }\n\n\n        </OwlCarousel>\n\n\n\n      </div>\n\n    <div className=\"status_footer\">\n      <div className=\"status_like\">\n        <span><img src=\"/assets/images/heart-icon.svg\" alt=\"like status\" /> 2,190</span>\n      </div>\n      <div className=\"user_connect ml-auto\">\n        <ul>\n          <li className=\"bg-grd-clr\"><img src=\"/assets/images/message.svg\" alt=\"message\" /></li>\n          <li className=\"bg-grd-clr\"><img src=\"/assets/images/call-answer.svg\" alt=\"call\" /></li>\n          <li className=\"bg-grd-clr\"><img src=\"/assets/images/video-call.svg\" alt=\"video call\" /></li>\n          <li className=\"bg-grd-clr\"><img src=\"/assets/images/gift.svg\" alt=\"gift\" /></li>\n          <li className=\"bg-grd-clr\"><img src=\"/assets/images/dots-icon.svg\" alt=\"gift\" /></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n      <Modal className =\"theme-modal edit-payment-modal\" id=\"live-modal\" show={showLive} onHide={() => setShowLive(false)} backdrop=\"static\" keyboard={false}>\n          {/* Modal start here */}\n          {/* <div className=\"theme-modal\" id=\"live-modal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\"> */}\n          <div className=\"modal-dialog\" role=\"document\">\n          <form action=\"\">\n                  <div className=\"modal-body p-0\">\n                    <h2>Upload Status</h2>\n                    <div className=\"upload-status d-flex\">\n                      <a id=\"upload__media\" className=\"upload__media bg-grd-clr\" onClick={handleClick}  href=\"javascript:void(0)\">\n                      <i className=\"fas fa-camera\"></i>\n                      <input type=\"file\"  name=\"file\" value=\"\" id=\"upload_fle\" className=\"d-none\" onChange={handleFileChange} accept=\"image/*\"  />\n\n                      </a>\n                      <a className=\"upload__text bg-grd-clr\" href=\"javascript:void(0)\">\n                        <i className=\"fas fa-pencil-alt\"></i>\n                        </a>\n                        </div>\n                        <textarea/>\n\n                    </div>\n             </form>\n          </div>\n          {/* </div> */}\n          {/* End Modal start here */}\n          <a href=\"javascript:void(0)\" className=\"modal-close\" onClick={() => setShowLive(false)}><img src=\"/assets/images/btn_close.png\" /></a>\n      </Modal>\n\n</section>\n\n\n    )\n}\nexport default SearchHome;\n\n\n\n",{"ruleId":"39","severity":1,"message":"40","line":10,"column":16,"nodeType":"41","messageId":"42","endLine":10,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":10,"column":28,"nodeType":"41","messageId":"42","endLine":10,"endColumn":36},{"ruleId":"39","severity":1,"message":"44","line":23,"column":11,"nodeType":"41","messageId":"42","endLine":23,"endColumn":23},{"ruleId":"39","severity":1,"message":"45","line":24,"column":12,"nodeType":"41","messageId":"42","endLine":24,"endColumn":26},{"ruleId":"39","severity":1,"message":"46","line":28,"column":12,"nodeType":"41","messageId":"42","endLine":28,"endColumn":25},{"ruleId":"39","severity":1,"message":"47","line":33,"column":12,"nodeType":"41","messageId":"42","endLine":33,"endColumn":21},{"ruleId":"39","severity":1,"message":"48","line":34,"column":12,"nodeType":"41","messageId":"42","endLine":34,"endColumn":19},{"ruleId":"39","severity":1,"message":"49","line":35,"column":12,"nodeType":"41","messageId":"42","endLine":35,"endColumn":19},{"ruleId":"39","severity":1,"message":"50","line":37,"column":11,"nodeType":"41","messageId":"42","endLine":37,"endColumn":22},{"ruleId":"51","severity":1,"message":"52","line":88,"column":5,"nodeType":"53","endLine":88,"endColumn":15,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":175,"column":29,"nodeType":"57","messageId":"58","endLine":175,"endColumn":31},{"ruleId":"51","severity":1,"message":"59","line":218,"column":7,"nodeType":"53","endLine":218,"endColumn":9,"suggestions":"60"},{"ruleId":"39","severity":1,"message":"61","line":219,"column":11,"nodeType":"41","messageId":"42","endLine":219,"endColumn":22},{"ruleId":"51","severity":1,"message":"59","line":239,"column":5,"nodeType":"53","endLine":239,"endColumn":12,"suggestions":"62"},{"ruleId":"39","severity":1,"message":"63","line":249,"column":11,"nodeType":"41","messageId":"42","endLine":249,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":278,"column":13,"nodeType":"66","endLine":278,"endColumn":42},{"ruleId":"67","severity":1,"message":"68","line":278,"column":21,"nodeType":"69","messageId":"70","endLine":278,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":282,"column":15,"nodeType":"66","endLine":282,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":282,"column":23,"nodeType":"69","messageId":"70","endLine":282,"endColumn":43},{"ruleId":"64","severity":1,"message":"65","line":328,"column":21,"nodeType":"66","endLine":328,"endColumn":50},{"ruleId":"67","severity":1,"message":"68","line":328,"column":29,"nodeType":"69","messageId":"70","endLine":328,"endColumn":49},{"ruleId":"55","severity":1,"message":"56","line":333,"column":36,"nodeType":"57","messageId":"58","endLine":333,"endColumn":38},{"ruleId":"64","severity":1,"message":"65","line":344,"column":21,"nodeType":"66","endLine":344,"endColumn":50},{"ruleId":"67","severity":1,"message":"68","line":344,"column":29,"nodeType":"69","messageId":"70","endLine":344,"endColumn":49},{"ruleId":"55","severity":1,"message":"56","line":385,"column":30,"nodeType":"57","messageId":"58","endLine":385,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":428,"column":23,"nodeType":"66","endLine":428,"endColumn":131},{"ruleId":"67","severity":1,"message":"68","line":428,"column":110,"nodeType":"69","messageId":"70","endLine":428,"endColumn":130},{"ruleId":"64","severity":1,"message":"65","line":433,"column":23,"nodeType":"66","endLine":433,"endColumn":88},{"ruleId":"67","severity":1,"message":"68","line":433,"column":67,"nodeType":"69","messageId":"70","endLine":433,"endColumn":87},{"ruleId":"64","severity":1,"message":"65","line":444,"column":11,"nodeType":"66","endLine":444,"endColumn":99},{"ruleId":"67","severity":1,"message":"68","line":444,"column":19,"nodeType":"69","messageId":"70","endLine":444,"endColumn":39},{"ruleId":"71","severity":1,"message":"72","line":444,"column":99,"nodeType":"66","endLine":444,"endColumn":141},"no-unused-vars","'ModalBody' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'randomNumber' is assigned a value but never used.","'fetchedProfile' is assigned a value but never used.","'StartPosition' is assigned a value but never used.","'showImage' is assigned a value but never used.","'picture' is assigned a value but never used.","'imgData' is assigned a value but never used.","'handleImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleStatus'. Either include it or remove the dependency array.","ArrayExpression",["73"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["74"],"'uploadImage' is assigned a value but never used.",["75"],"'makeMeLive' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [friendId, handleStatus]",{"range":"82","text":"83"},"Update the dependencies array to be: [history]",{"range":"84","text":"85"},"Update the dependencies array to be: [Click, history]",{"range":"86","text":"87"},[2808,2818],"[friendId, handleStatus]",[6736,6738],"[history]",[7236,7243],"[Click, history]"]